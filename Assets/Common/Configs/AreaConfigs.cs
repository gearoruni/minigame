
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class AreaConfigs : Luban.BeanBase
{
    public AreaConfigs(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["fieldType"].IsNumber) { throw new SerializationException(); }  FieldType = _buf["fieldType"]; }
        { if(!_buf["define1"].IsNumber) { throw new SerializationException(); }  Define1 = _buf["define1"]; }
        { if(!_buf["define2"].IsNumber) { throw new SerializationException(); }  Define2 = _buf["define2"]; }
        { if(!_buf["alwaysActive"].IsBoolean) { throw new SerializationException(); }  AlwaysActive = _buf["alwaysActive"]; }
        { if(!_buf["livingTime"].IsNumber) { throw new SerializationException(); }  LivingTime = _buf["livingTime"]; }
    }

    public static AreaConfigs DeserializeAreaConfigs(JSONNode _buf)
    {
        return new AreaConfigs(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// name
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 1 = 矩形<br/>2 = 扇形
    /// </summary>
    public readonly int FieldType;
    /// <summary>
    /// 长/半径
    /// </summary>
    public readonly float Define1;
    /// <summary>
    /// 宽/角度
    /// </summary>
    public readonly float Define2;
    public readonly bool AlwaysActive;
    public readonly float LivingTime;
   
    public const int __ID__ = 234949636;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "fieldType:" + FieldType + ","
        + "define1:" + Define1 + ","
        + "define2:" + Define2 + ","
        + "alwaysActive:" + AlwaysActive + ","
        + "livingTime:" + LivingTime + ","
        + "}";
    }
}

}
