
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class BrickConfigs : Luban.BeanBase
{
    public BrickConfigs(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["prefabName"].IsString) { throw new SerializationException(); }  PrefabName = _buf["prefabName"]; }
        { if(!_buf["spritePath"].IsString) { throw new SerializationException(); }  SpritePath = _buf["spritePath"]; }
        { if(!_buf["isCollider"].IsBoolean) { throw new SerializationException(); }  IsCollider = _buf["isCollider"]; }
        { if(!_buf["isTrigger"].IsBoolean) { throw new SerializationException(); }  IsTrigger = _buf["isTrigger"]; }
        { if(!_buf["isObstacle"].IsBoolean) { throw new SerializationException(); }  IsObstacle = _buf["isObstacle"]; }
        { if(!_buf["width"].IsNumber) { throw new SerializationException(); }  Width = _buf["width"]; }
        { if(!_buf["height"].IsNumber) { throw new SerializationException(); }  Height = _buf["height"]; }
        { if(!_buf["brickType"].IsNumber) { throw new SerializationException(); }  BrickType = (BrickType)_buf["brickType"].AsInt; }
    }

    public static BrickConfigs DeserializeBrickConfigs(JSONNode _buf)
    {
        return new BrickConfigs(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 瓦片预设名称
    /// </summary>
    public readonly string PrefabName;
    /// <summary>
    /// 瓦片图片保存位置
    /// </summary>
    public readonly string SpritePath;
    /// <summary>
    /// 是否具有碰撞体
    /// </summary>
    public readonly bool IsCollider;
    /// <summary>
    /// 是否是碰撞体Trigger
    /// </summary>
    public readonly bool IsTrigger;
    /// <summary>
    /// 是否为寻路障碍
    /// </summary>
    public readonly bool IsObstacle;
    /// <summary>
    /// 单位：格
    /// </summary>
    public readonly int Width;
    public readonly int Height;
    /// <summary>
    /// 值对应enum表中的value
    /// </summary>
    public readonly BrickType BrickType;
   
    public const int __ID__ = -649998832;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "prefabName:" + PrefabName + ","
        + "spritePath:" + SpritePath + ","
        + "isCollider:" + IsCollider + ","
        + "isTrigger:" + IsTrigger + ","
        + "isObstacle:" + IsObstacle + ","
        + "width:" + Width + ","
        + "height:" + Height + ","
        + "brickType:" + BrickType + ","
        + "}";
    }
}

}
