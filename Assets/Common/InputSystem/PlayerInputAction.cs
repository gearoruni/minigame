//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Common/InputSystem/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""keyBoard"",
            ""id"": ""9c75ceff-6939-41e6-b970-075a22e23ad9"",
            ""actions"": [
                {
                    ""name"": ""MoveCtrl"",
                    ""type"": ""Value"",
                    ""id"": ""14646263-fd33-485c-a817-9fd51ece0e85"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""1872cfe5-56fd-43f9-b895-706f5a493055"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Char1Changed"",
                    ""type"": ""Button"",
                    ""id"": ""2518e265-18ed-47c3-bcba-55f25f080346"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Char2Changed"",
                    ""type"": ""Button"",
                    ""id"": ""0852d230-36a4-498d-9b69-d07b4689355b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Char3Changed"",
                    ""type"": ""Button"",
                    ""id"": ""1414e5e7-6208-4ea8-9f47-30d55ce18b72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""e01a5c73-6bbc-4416-aee1-b739377528df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightSkill"",
                    ""type"": ""Button"",
                    ""id"": ""e2a53439-8334-480a-9d35-bc5659f53401"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QSkill"",
                    ""type"": ""Button"",
                    ""id"": ""9489f258-872a-4b07-9b09-bea47ad497b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESkill"",
                    ""type"": ""Button"",
                    ""id"": ""96bc2f41-5178-4538-82b2-cdfe4d20e194"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TSkill"",
                    ""type"": ""Button"",
                    ""id"": ""3cdb3aa4-00b1-4f5e-9155-efe0bc389681"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""1a3bea94-c32d-4317-83f2-a47408c3b023"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""MoveCtrl"",
                    ""id"": ""38dbbdb9-0fa6-40a7-ae9e-8d9838d876f6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCtrl"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c05d0a8c-ff61-4c5d-876a-38336d15974e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCtrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e0009bbb-7f23-4ec3-a4f7-e5ce2729e769"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCtrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4ab34a1e-0951-45ac-ba7f-4e04aa60096c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCtrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""30fd0b62-20cc-4208-8af1-beae2e04aa33"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCtrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""882d2021-097b-43a6-98ec-ed91dc593d8a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81e7fc10-7a7f-4293-a043-ba9f1d0824a2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Char1Changed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e841901d-70ab-4822-b14c-e8ccbb08488f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Char2Changed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ff8df85-3d91-4aa9-9c81-028e397a1e4e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Char3Changed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47af331d-676a-49e3-814e-3986f5f5caf7"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74b3943d-0162-4019-9b74-aa66770f1667"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edd5150c-16c0-4a82-96bc-8a5fc4926652"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36d487a4-e822-4376-be05-312b8ca544f4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8097feb8-d16e-45d7-97fa-82b045abf339"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fd4e43a-60ac-46a6-8ff8-368e65f8779c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // keyBoard
        m_keyBoard = asset.FindActionMap("keyBoard", throwIfNotFound: true);
        m_keyBoard_MoveCtrl = m_keyBoard.FindAction("MoveCtrl", throwIfNotFound: true);
        m_keyBoard_Fire = m_keyBoard.FindAction("Fire", throwIfNotFound: true);
        m_keyBoard_Char1Changed = m_keyBoard.FindAction("Char1Changed", throwIfNotFound: true);
        m_keyBoard_Char2Changed = m_keyBoard.FindAction("Char2Changed", throwIfNotFound: true);
        m_keyBoard_Char3Changed = m_keyBoard.FindAction("Char3Changed", throwIfNotFound: true);
        m_keyBoard_Reload = m_keyBoard.FindAction("Reload", throwIfNotFound: true);
        m_keyBoard_RightSkill = m_keyBoard.FindAction("RightSkill", throwIfNotFound: true);
        m_keyBoard_QSkill = m_keyBoard.FindAction("QSkill", throwIfNotFound: true);
        m_keyBoard_ESkill = m_keyBoard.FindAction("ESkill", throwIfNotFound: true);
        m_keyBoard_TSkill = m_keyBoard.FindAction("TSkill", throwIfNotFound: true);
        m_keyBoard_Interaction = m_keyBoard.FindAction("Interaction", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // keyBoard
    private readonly InputActionMap m_keyBoard;
    private List<IKeyBoardActions> m_KeyBoardActionsCallbackInterfaces = new List<IKeyBoardActions>();
    private readonly InputAction m_keyBoard_MoveCtrl;
    private readonly InputAction m_keyBoard_Fire;
    private readonly InputAction m_keyBoard_Char1Changed;
    private readonly InputAction m_keyBoard_Char2Changed;
    private readonly InputAction m_keyBoard_Char3Changed;
    private readonly InputAction m_keyBoard_Reload;
    private readonly InputAction m_keyBoard_RightSkill;
    private readonly InputAction m_keyBoard_QSkill;
    private readonly InputAction m_keyBoard_ESkill;
    private readonly InputAction m_keyBoard_TSkill;
    private readonly InputAction m_keyBoard_Interaction;
    public struct KeyBoardActions
    {
        private @PlayerInputAction m_Wrapper;
        public KeyBoardActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveCtrl => m_Wrapper.m_keyBoard_MoveCtrl;
        public InputAction @Fire => m_Wrapper.m_keyBoard_Fire;
        public InputAction @Char1Changed => m_Wrapper.m_keyBoard_Char1Changed;
        public InputAction @Char2Changed => m_Wrapper.m_keyBoard_Char2Changed;
        public InputAction @Char3Changed => m_Wrapper.m_keyBoard_Char3Changed;
        public InputAction @Reload => m_Wrapper.m_keyBoard_Reload;
        public InputAction @RightSkill => m_Wrapper.m_keyBoard_RightSkill;
        public InputAction @QSkill => m_Wrapper.m_keyBoard_QSkill;
        public InputAction @ESkill => m_Wrapper.m_keyBoard_ESkill;
        public InputAction @TSkill => m_Wrapper.m_keyBoard_TSkill;
        public InputAction @Interaction => m_Wrapper.m_keyBoard_Interaction;
        public InputActionMap Get() { return m_Wrapper.m_keyBoard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyBoardActions set) { return set.Get(); }
        public void AddCallbacks(IKeyBoardActions instance)
        {
            if (instance == null || m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Add(instance);
            @MoveCtrl.started += instance.OnMoveCtrl;
            @MoveCtrl.performed += instance.OnMoveCtrl;
            @MoveCtrl.canceled += instance.OnMoveCtrl;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @Char1Changed.started += instance.OnChar1Changed;
            @Char1Changed.performed += instance.OnChar1Changed;
            @Char1Changed.canceled += instance.OnChar1Changed;
            @Char2Changed.started += instance.OnChar2Changed;
            @Char2Changed.performed += instance.OnChar2Changed;
            @Char2Changed.canceled += instance.OnChar2Changed;
            @Char3Changed.started += instance.OnChar3Changed;
            @Char3Changed.performed += instance.OnChar3Changed;
            @Char3Changed.canceled += instance.OnChar3Changed;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @RightSkill.started += instance.OnRightSkill;
            @RightSkill.performed += instance.OnRightSkill;
            @RightSkill.canceled += instance.OnRightSkill;
            @QSkill.started += instance.OnQSkill;
            @QSkill.performed += instance.OnQSkill;
            @QSkill.canceled += instance.OnQSkill;
            @ESkill.started += instance.OnESkill;
            @ESkill.performed += instance.OnESkill;
            @ESkill.canceled += instance.OnESkill;
            @TSkill.started += instance.OnTSkill;
            @TSkill.performed += instance.OnTSkill;
            @TSkill.canceled += instance.OnTSkill;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
        }

        private void UnregisterCallbacks(IKeyBoardActions instance)
        {
            @MoveCtrl.started -= instance.OnMoveCtrl;
            @MoveCtrl.performed -= instance.OnMoveCtrl;
            @MoveCtrl.canceled -= instance.OnMoveCtrl;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @Char1Changed.started -= instance.OnChar1Changed;
            @Char1Changed.performed -= instance.OnChar1Changed;
            @Char1Changed.canceled -= instance.OnChar1Changed;
            @Char2Changed.started -= instance.OnChar2Changed;
            @Char2Changed.performed -= instance.OnChar2Changed;
            @Char2Changed.canceled -= instance.OnChar2Changed;
            @Char3Changed.started -= instance.OnChar3Changed;
            @Char3Changed.performed -= instance.OnChar3Changed;
            @Char3Changed.canceled -= instance.OnChar3Changed;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @RightSkill.started -= instance.OnRightSkill;
            @RightSkill.performed -= instance.OnRightSkill;
            @RightSkill.canceled -= instance.OnRightSkill;
            @QSkill.started -= instance.OnQSkill;
            @QSkill.performed -= instance.OnQSkill;
            @QSkill.canceled -= instance.OnQSkill;
            @ESkill.started -= instance.OnESkill;
            @ESkill.performed -= instance.OnESkill;
            @ESkill.canceled -= instance.OnESkill;
            @TSkill.started -= instance.OnTSkill;
            @TSkill.performed -= instance.OnTSkill;
            @TSkill.canceled -= instance.OnTSkill;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
        }

        public void RemoveCallbacks(IKeyBoardActions instance)
        {
            if (m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyBoardActions instance)
        {
            foreach (var item in m_Wrapper.m_KeyBoardActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public KeyBoardActions @keyBoard => new KeyBoardActions(this);
    public interface IKeyBoardActions
    {
        void OnMoveCtrl(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnChar1Changed(InputAction.CallbackContext context);
        void OnChar2Changed(InputAction.CallbackContext context);
        void OnChar3Changed(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnRightSkill(InputAction.CallbackContext context);
        void OnQSkill(InputAction.CallbackContext context);
        void OnESkill(InputAction.CallbackContext context);
        void OnTSkill(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
    }
}
